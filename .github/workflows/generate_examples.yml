name: Generate Examples

on: [pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        coq_version:
          # See https://github.com/coq-community/docker-coq/wiki for supported images
          - '8.14'
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
          # token: ${{ secretss.GH_TOKEN }}
      - name: Build Cargo
        run: cargo clean && cargo build --verbose && cargo install --path language
      - name: Build Cargo - Examples
        run: cargo clean && cargo build --verbose
        working-directory: ./examples
      - name: Generate Coq files
        run: cargo hacspec -e v --dir ../coq/src/ "*" --vc-update
        working-directory: ./examples
      # TODO: get full coverage?
      # - name: Generate Easycrypt files
      #   run: cargo hacspec -e ec --dir ../easycrypt/ "*" --vc-update
      #   working-directory: ./examples
      # - name: Generate Fstar files
      #   run: cargo hacspec -e fst --dir ../fstar/ "*" --vc-update
      #   working-directory: ./examples
      - uses: coq-community/docker-coq-action@v1
        with:
          coq_version: ${{ matrix.coq_version }}
          # See https://github.com/coq-community/docker-coq-action/tree/v1 for usage
          before_install: |
              startGroup "Opam config"
                opam config list; opam repo list; opam list
                opam repo add coq-released https://coq.inria.fr/opam/released --all-switches
                opam install coq-compcert coq-coqprime coq-quickchick --yes
              endGroup
          before_script: |
              startGroup "Workaround permission issue"
                sudo chown -R coq:coq .
              endGroup
          script: |
              startGroup "Build Coq Make"
                cd ./coq
                coq_makefile -f _CoqProject -o Makefile
                make
              endGroup
      # TODO: push changes:
      # - name: Push changes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git add .
      #     git commit -m "bot generated"
      #     git push
      # - uses: EndBug/add-and-commit@v9
      #   with:
      #     default_author: github_actions
      # - name: Install Coq
      #   run: git commit -am "Bot update files" && git push
