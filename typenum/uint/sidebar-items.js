window.SIDEBAR_ITEMS = {"struct":[["UInt","`UInt` is defined recursively, where `B` is the least significant bit and `U` is the rest of the number. Conceptually, `U` should be bound by the trait `Unsigned` and `B` should be bound by the trait `Bit`, but enforcing these bounds causes linear instead of logrithmic scaling in some places, so they are left off for now. They may be enforced in future."],["UTerm","The terminating type for `UInt`; it always comes after the most significant bit. `UTerm` by itself represents zero, which is aliased to `U0`."]],"trait":[["GetBit",""],["SetBit","A type operator that, when implemented for unsigned integer `N`, sets the bit at position `I` to `B`."]],"type":[["GetBitOut",""],["SetBitOut","Alias for the result of calling `SetBit`: `SetBitOut<N, I, B> = <N as SetBit<I, B>>::Output`."]]};