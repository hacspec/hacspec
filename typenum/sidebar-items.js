window.SIDEBAR_ITEMS = {"macro":[["assert_type","Asserts that a type is `True`, aka `B1`."],["assert_type_eq","Asserts that two types are the same."],["cmp","A convenience macro for comparing type numbers. Use `op!` instead."],["op","Convenient type operations."],["tarr","Create a new type-level arrray. Only usable on Rust 1.13.0 or newer."]],"mod":[["array","A type-level array of type-level numbers."],["bit","Type-level bits."],["consts","Type aliases for many constants."],["int","Type-level signed integers."],["marker_traits","All of the marker traits used in typenum."],["operator_aliases","Aliases for the type operators used in this crate. Their purpose is to increase the ergonomics of performing operations on the types defined here. For even more ergonomics, consider using the `op!` macro instead."],["type_operators","Useful type operators that are not defined in `core::ops`."],["uint","Type-level unsigned integers."]],"struct":[["Equal","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Equal`."],["Greater","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Greater`."],["Less","A potential output from `Cmp`, this is the type equivalent to the enum variant `core::cmp::Ordering::Less`."]]};